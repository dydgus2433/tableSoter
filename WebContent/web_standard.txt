웹표준
올바른 문서 형식(DOCTYPE)을 선언해 주는 것은 다양한 웹 브라우저에 따른 렌더링 차이를 최소화함
렌더링 - 브라우저에서 HTML 코드를 인식하고 화면상에 결과를 보여주는 것

html4 기준 

loose.dtd 
이전 버전에서 만들어진 웹사이트를 고려해서 유지보수할 때, 현재 버전의 HTML과 비교해서 생략해도 되는 태그가 있으면 생략해도
브라우저가 문서를 실행하는 데 전혀 문제가 없다는 것을 의미.

strict.dtd
새롭게 만드는 사이트는 규격에 맞게 

frameset.dtd
많이 사용하지 않음. 매뉴얼을 만들거나 웹사이트 관리자 페이지에서 많이 보이는 프레임셋을 이용할 때 사용

사용하지 말아야 할 태그 
center, font, iframe, strike , u 

iframe -> embed


html5 DOCTYPE
이전 문서와의 호환성은 무시해버리고 웹 표준을 이용해서 새로운 웹사이트를 만들 경우에만 HTML5를 사용해야한다. - 호환성 지원X
HTML 4.01 이전 버전(사이트가 엄청 거대해져서 다 바꾸지 못할 경우) 많을 경우에는 사용하지 않는 것을 추천. 

meta : 메타 데이터 웹 페이지가 html로 구성되어 있는지, 검색 엔진에서 키워드는 어떤 키워드를 지정할 것인지 표시해 주는 곳입니다.

ex ) <meta name="keywords" content ="웹 표준, HTML5, CSS3">

DoCtype 문서가 어떻게 구성되어 있는지 브라우저에 알려주는 역할 - 그래서 항상 문서의 첫 부분에 위치한다.

<head>는 문서에 대한 각종 정보 및 CSS파일, 자바스크립트 코드가 위치하는 곳



HTML5와 XTHML 1.0의 차이점

XHTML은 기존 HTML 4.0보다 호환성과 확장성 면에서 유리하다. xml 애플리케이션과의 호환성이 좋다는 것을 의미
기계는 사람과 달라서 이게(표현을 위한 태그) 왜 필요한지 이해하지 못하기 때문에 XHTML에서는 이런 호환성르 위해 표현과 구조를 엄격하게 분리하게 된 것 

기술이 발달하고 여러 기기들이 나오면서 다양한 구성의 웹 페이지를 구현할 필요가 생기게 됨

HTML5는 기존 XHTML에서 HTML 자체에서 처리해주지 못하는 여러 멀티미디어적인 요소, 기존 XHTML 문서보다 더 구조화된 문서 구조 등, 다양한 기술적 요구가 나오게 되자, W3C가 아닌 다른 단체 (WHATWG)에 의해 먼저 THML5의 규격이 만들어지고 나중에 W3C에서수용

애플에서 적극 미는 이유 - 어도비의 플래시 ,MS의 실버라이드, 썬의 자바 FX같은 비표준화 기술을 대체하기 위함.

달라진 점 
1. 구현되는 방식 최소화 (각 요소와 속성이 정확하게 동작하게끔 처리됨) 

2. 레이아웃 담당하는 header, nav, footer 기존에 <div id="header">와 같은 방식으로 처리했던 번거로움을 제거

3. HTML5에서 가장 편리하게 바뀐 것이 웹 애플리케이션 개발용 요소들이 추가된 점. 특히 web form에 다양한 속성이 추가. 

4. 다음의 표와 같이 XHTML 1.0과 HTML5 문서 내부 태그 서술 방식에서 차이점  

HTML5에서 추가된 태그 

article : 웹 페이지의 본문을 정의할 때 사용됩니다 

aside : Article의 내용을 보충해 주는 역할을 하는 콘텐츠를 넣을 때 사용

audio : 오디오 재생

canvas : 그래픽 보여줄 때 사용 (스크립트 언어를 통해 구현)

command : 명령버튼 만들 때 사용

datalist : 드롭다운 리스트를 만들 때 사용

embed : 플러그인이나 플래시 요소를 보여줄 때 사용( iframe 대체)

figcaption : figure와 함께 사용되며, figure의 캡션을 추가할 때 사용됩니다. 
<figure> 요소는 독립적인 콘텐츠를 표현합니다.  https://developer.mozilla.org/ko/docs/Web/HTML/Element/figure

figure : 이미지나 사진, 코드 등을 보여줄 때 사용

footer 푸터 정의

header 헤더 정의

hgroup : H1 ~ H6의 그룹 만들 때 사용

keygen : 폼에서 사용되며, 로컬상에 보안 키를 저장하고 공개키는 서버로 보냅니다. 

mark : 텍스트에 마크 펜으로 칠한 효과를 줍니다. 

meter : 길이를 나타내줍니다. 그래픽적으로 어느 정도 길이인 것을 나타내 줍니다. 

nav : 메뉴를 정의할 때 사용합니다. 

output : 계산된 결과를 나타낼 때 사용됩니다. 

progress : 다운로드 같이 몇 %가 남아있는지 표시할 때 사용됩니다. 

section : 섹션을 정의할 때 사용합니다. 

source : 오디오, 또는 비디오 태그와 같이 사용되며, 소스를 나타낼 때 사용됩니다. 

summary : datalist 태그와 같이 사용되며, 상세한 내용의 요약을 나타냅니다. - 현재 지원 X

time : 문서 내부에 시간을 정의할 때 사용합니다. 

video :  비디오를 재생할 때 사용합니다. 

wbr : 문서의 내용이 길어서 다음 라인으로 표시될 때, 영문인 경우 같은 라인에 문장을 표시해야 하는 경우 사용합니다. 

input type 

search : 검색

range : 범위

color : 색상

tel 전화번호 

time 시간

url URL

email 이메일

date 일

month 월

week 주

datetime 날짜와 시간

datetime-local 현재 있는 곳 날짜와 시간(글로벌 사이트에서)

http://miketaylr.com/code/input-type-attr.html - input type 지원여부 확인 

iframe : 사용하게 되면 웹사이트 사용자가 원하지 않는 스팸광고를 집어 넣거나, 부정적인 목적으로 스파이웨어를 심어 놓을 수도 있기 때문입니다. 

여러가지 편리성 때문에 iframe은 여전히 사용할 수 있게 해놓음


코드의 양이 적어질 수록 웹사이트가 가벼워져 브라우저에서 구동하는 시간이 훨씬 빨라짐. 
HTML5는 문서 구조 표준화로 가장 큰 구조적 장점을 얻음 


CSS3 

<style type = "text/css" title = "currentStyle" media="screen">
	@import = "/001/001.css";
</style>

<style type = "text/css" title = "currentStyle" media="screen">
	@import = "/213/213.css";
</style>

아이디 선택자는 문서 내에 큰 틀을 구성하는 곳에 사용하는 것이 좋음

css 속성

Borders : 테두리의 색을 다양하게 적용할 수 있습니다. 또한 테두리에 이미지를 넣을 수 있고 모서리를 둥그렇게 적용할 수 있습니다.

Backgrounds : 하나의 태그에 다중 이미지를 추가할 수 있고 백그라운드의 위치를 정확하게 잡을 수 있습니다. 또한 백그라운드의 사이즈도 조절할 수 있습니다. 

Color : 색의 농도(투명도)를 조절할 수 있습니다. 또한 RGB 색과 인쇄용인 HSL컬러로 색을 지정할 수 있습니다. 

Text : 텍스트에 그림자 효과를 줄 수 있습니다. 또한 단어가 잘리는 효과(word-wrap)를 줄 수 있으며, 텍스트 overflow 효과를 줄 수 있습니다.

Transformations 변형효과 (크기조절, 기울기효과, 회전효과 등)를 줄 수 있습니다. 

Box : 박스에 그림자를 적용할 수 있고 사이즈 조절이 가능하며 세로축과 가로축을 기본으로 overflow를 각각 조절할 수 있습니다. 

Content : 요소(Element)에 직접적으로 콘텐츠를 지정해서 스타일을 줄 수 있습니다. 

Opacity : 요소에 투명도를 지정할 수 있습니다. 

Media : CSS2에서 사용하던 media를 다양하게 해상도나 색상 등 여러가지 요소를 지정해 줄 수 있게 되었습니다. 

Web forts : 웹 폰트가 정식으로 지원됩니다. 지금까지는 IE에서만 지원되었던 것이 모든 브라우저에서 지원됩니다. 

비디오 태그 탄생 배경

웹 표준 이전까진 사용자가 동영상을 보기 위해선 모든 브라우저에서 플러그인을 설치하거나 ActiveX를 이용해서 해당 플레이어를 설치해야만 했습니다. 현재 Youtube 동영상도 PC상에서 보는 영상들은 FLV파일, 아이폰이나 아이패드에서 보는 Youtube영상들은 mp4파일 포맷입니다.
이런 플러그인 또는 ActiveX를 이용한 별도의 프로그램은 보안상 위험이 항상 존재합니다. 그래서 별도의 프로그램안깔아도 되도록 video태그 추가된 것. 중요한 것은 동영상이 어떤 형식으로 제작되었는지가 중요. 인코딩이 어떻게 되었는가가 HTML5에서는 중요한 점

비디오 코덱
비디오 플레이어는 이 파일 포맷이 뭔지 확인하고, 인코딩은 어떻게 되었으며, 오디오는 어떤 포맷으로 되었는지를 검사해서, 오디오를 디코딩하고 동영상 또한 디코딩 과정을 통해 필레이어에서 재생되는 것입니다.

업계 표준 코덱은 H.264 MPEG-4 part 10 or MPEG-4 AVC 로 알려져있습니다. 확장자는 mp4, m4v / 애플, 유투브도 적극 사용 / 파폭 오페라는 지원X 라이센스 때문. 

Theora 코덱 - 라이센스 전혀 없음. Xiph.org 재단. ogg로 끝나는 파일 ogv

WebM / VP8 비디오 코덱, Vorbis 오디오 코덱을 이용한 포멧 - 오픈소스용 동영상 포맷. 발전가능성 높음. .webm 구글이 향후 전적으로 이 코텍서비스하겠다고 공표

HTML5 문서에 동영상을 추가하기 위해선 적절한 인코딩으로 파일을 변환해줘야 합니다. 

H.264파일 포맷으로 동영상 변환해줌 (다음팟 인코더 ) - pc저장용으로 해야함 

autoplay, controls, preload 와 같은 옵션 지정. 

비디오 태그 사용

각 브라우저가 인코딩 방식이 다르기 때문에 달리 코딩해줘야함

<video width="400" height="240" controls autoplay preload="auto">
	<source src="DSC_2190.mp4" type='video/mp4; codecs="avc1.42E01E, mp4a.40.2"'>
	<source src="DSC_2190.ogv" type='video/ogg; codecs="theora, vorbis"'>
</video>

https://www.slideshare.net/ugpapa/6-16742381 - 20page 구버전과 호환되는 동영상 올리는 방법 (IE9) 

먼저 HTML5 표준 포맷의 사이트를 만들고, 마지막에 하위 브라우저에 대한 처리를 해줌으로써, 모든 브라우저에서 동일한 결과를 얻을 수 있습니다. 

audio 태그 활용하기

브라우저마다 호환되는 파일이 다름 mp3 - royalty / ogg - zero

편법을 이용해서라도 멀티미디어 태그를 써야하나요 - 웹 표준이 좋고 html5기술이 뛰어나다고 하지만, 보편적 기술이 아니기 떄문에
반드시 IE9 이하 사용자들도 (2013년도 기준) 해당 내용을 볼 수 있게끔 처리해 줘야 하는 것입니다. 


embed 태그 활용하기 

embed 태그는 브라우저에 설치되어 있는 플러그인이 필요한 파일을 동작할 때 사용하는 태그입니다.
즉 플래시 파일은, 어도비 플레이어가 설치되어 있는 경우, 플래시 파일을 웹 문서에 삽입하기 위해 예전에 사용했던 
여러가지 태그들을 간단하게 embed를 통해서 사용할 수 있다는 것입니다. 

embed 태그는 플러그인이 설치되어 있는 브라우저 또는 플러그인이 필요한 파일을 재생할 떄 사용하는 태그입니다. 


canvas 태그 맛 보기 

canvas에 있는 요소들은 모든 것을 프로그램으로 처리하는 것이 아니라, 비트맵 이미지까지 이용할 수 있다는 것을 말해주고 있습니다.

이 말은 canvas 태그는 비트맵 이미지 , 프로그래밍화된 이미지, 그 외 여러가지 복합적인 요소들로 구성된 장소의 역할을 한다고 할 수 있습니다.  그렇기 때문에 canvas 태그를 이용하여 애니매이션이나 게임을 만들 수도 있고, 이미지 에디터까지 가능한 것입니다. 

html5에 관심을 많이 보이는 부분이 canvas 포토샵도 유사하게 구현가능, 게임, 그래프 등등 구현

www.canvasdemos.com 

HTML5란 언어는 이전 버전의 HTML의 연장선에서 많이 사용하는 요소들을 태그 내부에 통합하고, 멀티미디어 적인 요소를 대포 보강했다는 의의


태그 선택자 : HTML 태그에 속성 적용
p, table, body, header, nav 등 HTL 태그

종속 선택자 : 선택자에 종속된 선택자. 
p.classname / table.classname p#idname

하위 선택자 : 선택자 내부의 모든 자식 선택자 
p a / p .classname / p #idname (선택자와 선택자 사이에 빈칸)

그룹 선택자 : 여러 선택자를 복합적으로 적용할 때
p, .class, #idname, table 

자식 선택자 : 선택자 바로 밑의 자식 선택자 
p >a / ul > li (보다 큰 기호 사용)

인접 선택자 : 붙어있는 선택자와 선택자에 특정 효과를 줄 때 사용
h1 + p


인라인 방식 권장하지는 않으나 반드시 익혀야함. 템플릿 방식으로 운영되는  서비스 경우 인라인으로 처리해야함

임베디드(Embedded) 방식 
<style type="text/css" media="screen">
	h1 { color : #ffc;}
</style>

임베디드 방식은 HTML 문서 내부에 스타일을 정의

외부파일에 의한 방식은 head 태그 안에 넣어줌

@import 방식
<style type="text/css" media ="screen">
@import url(main.css);
</style>

link방식
<link href="main.css" rel="stylesheet" type="text/css" media="screen"/>

두가지로 나누는 이유 

@import는 아주 구식브라우저에서 이해하지 못함. 

main.css
body{
	padding : 0;
	margin : 10px;
}

company.css
@import url("main.css");
body {
	background-color : #FF6;
}

company.css를 임포트하면 main.css와 company.css파일의 속성이 동시 적용

CSS - 계단식 스타일 시트 . 하단에 지정한 색이 적용

장점 : 개별 css파일을 서로 내부에서 불러올 수 있는 장점이 있음. 여러개의 파일을 조합해 하나의 파일로 만들어서 사용할 수 있고
임베디드 방식으로 스타일을 적용하면서 필요한 요소만 따로 @import할 수도 있습니다.

단점이 될 수 있음. 모든 CSS문이 엉켜버리는 경우(나중에 어떤 css가 무슨 역할 하는지를 몰라서) 

개발자는 link를 사용하기르 권장.  - 속도적인 측면에서 유리함. 

많은 css파일 관리에도 유리 


선택자 

인라인 : 인라인 스케이트의 바퀴들이 한줄로 디어 있듯이 한줄로 되어 있는 부분을 인라인
블록 : 하나의 박스

클래스 선택자
.classname{속성값;} 첫문자 영문, 소문자와 대소문자 구분 

아이디 선택자 
아이디 선택자는 화면상에서 큰 레이아웃을 잡을 때 사용하고 클래스 선택자는 세부 내용에 디자인 속성을 부여할 때 사용합니다.
같은 역할을 하는데, 이렇게 구분한 이유는 디자이너나 개발자들이 한눈에 문서의 구조를 파악할 때, 아이디 선택자를 문서 구조 잡는 곳에 사용하게 되면 "여기는 문서의 구조를 이루는 곳이구나 " 라고 바로 파악 가능하기 때문

하위 선택자 
주로 선택자 내부에 있는 선택자에 효과를 주기 위해서 사용되는 선택자 
<p> <a> <em> </em> </a> </p>
p a em 이나 p em 해도 해당속성 적용 

전체선택자 가장 많이 사용되는 경우 마진과 패딩을 0으로 조정할 경우 

하위 선택자 : 복잡할 구조일수록 유용 

선택자1 > 선택자2 

선택자1 바로 밑의 선택자2만 해당 
ul#list1 > li 의 경우 li.li1만 해당 
ul#list1 li의 경우 li.li1, li.li2 모두 해당 

<ul id = "list1">
	<li class="li1">
		<ul id = "list2">
		<li class="li2"></li>
		<li class="li2"></li>
		<li class="li2"></li>
	 </li>
</ul>

h1 +p:first-letter  유용한 인접 선택자 

수도 선택자 ( pseudo Selector) 특수 선택자 
하위 , 가짜 , 사칭자 또는 구며보이는 사람

수도 선택자는 선택자와 같이 사용되며, 선택자를 꾸며주는 역할을 하게 됨.

:hover, :active, :link, :visited 4개의 선택자는 a태그와 함꼐 가장 많이 사용 

:hover 
마우스 커서가 링크에 올라가 있는 상태

:active
마우스 커서를 클릭한 순간부터 놓기 직전까지 상태

:link 
링크를 클릭하지 않는 그냥 링크되어 있는 상태 / a만써도 무관

:visited 
링크를 눌러서 방문한 후 상태

:focus
입력 폼에서 키포드의 입력을 기다리는  상태

:first-line 
첫 번쨰 문장에만 적용

:first-letter
첫 글자에만 적용

:before
문장이 시작되기 전

:after 
문장이 끝난 다음


패밀리 트리(가계도)로 이해하는 상속


a태그가 .fin 클래스 선택자의 하위 선택자일 경우 
.fin a{} 
어떻게 적용되는 지 코드짜서 파악해봐 

가장 흔하게 사용된다 = 가장 중요하게 사용된다

margin : 10px 20px 30px 40px; -> 4방향( 상 10 우 20 하 30 좌 40 순) 시계방향 (top right bottom left) 
margin : 10px 20px -> 2방향 (상하 10/ 우좌 20)


초기화 할 경우 
body {
	margin :0;
	padding:0;
}

margin 음수값 가능 ( 웹 페이지 레이아웃을 잡을 때 박스와 박스를 중첩시킬 수 있다는 말) 


border-radius 
IE9제외하고는 편법으로 적용해야함

모질라 계열(파폭)
-moz-border-radius : 속성값;

webkit을 이용한 브라우저(사파리 구글 크롬)
-webkit-border-radius : 속성값;

앞에 -moz, -webkit 붙이믄됨 방향성 지정

box-shadow도 마찬가지


백그라운드 이미지 속성 이해하기 https://www.slideshare.net/ugpapa/13-18279121?next_slideshow=1

repeat : 반복요소 
repeat 무한 반복 -x는 x축반복 

attachment scroll, fixed 웹 문서가 아주 길 경우 scroll 고정할 경우 fixed  scroll하면 배경도 따라 움직이고 fixed하면 스크롤할수록 없어짐

http://www.colorzilla.com/gradient-editor/ - 그라데이션 사이트


